version: '3.9'

services:
  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust # Убедитесь, что этот метод аутентификации подходит вам
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5435:${DB_PORT}"
    healthcheck:  # Добавляем healthcheck
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      APP_PORT: ${APP_PORT}
    depends_on:
      database:
        condition: service_healthy  # Ждем, пока база данных не станет "здоровой"
    command: npm run start:prod

volumes:
  db_data:
